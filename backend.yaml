- name: setup Backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.venkatswan.online

  tasks:
  - name: disable node js
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable node js
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install node js
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql

  - name: Creating Expense user
    ansible.builtin.user:
      name: expense

  - name: Creating /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Downloading Application code to server /tmp directory
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip 

  - name: unzip package to /app
    ansible.builtin.unarchive:
      src: /tmp/backend.zip 
      dest: /app
      remote_src: yes
  
  - name: Install Dependensies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: Copy file with owner and permissions
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      executable: pip3.9

  - name: import mysql data db
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
      state: restarted
      name: backend